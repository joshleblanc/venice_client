=begin
#Venice.ai API

#The Venice.ai API.

The version of the OpenAPI document: 20250709.013306

Generated by: https://openapi-generator.tech
Generator version: 7.14.0

=end

require 'spec_helper'
require 'json'

# Unit tests for VeniceClient::ModelsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ModelsApi' do
  before do
    # run before each test
    @api_instance = VeniceClient::ModelsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ModelsApi' do
    it 'should create an instance of ModelsApi' do
      expect(@api_instance).to be_instance_of(VeniceClient::ModelsApi)
    end
  end

  # unit tests for list_model_compatibility_mapping
  # /api/v1/models/compatibility_mapping
  # Returns a list of model compatibility mappings and the associated model.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :type 
  # @return [ListModelCompatibilityMapping200Response]
  describe 'list_model_compatibility_mapping test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_model_traits
  # /api/v1/models/traits
  # Returns a list of model traits and the associated model.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :type 
  # @return [ListModelTraits200Response]
  describe 'list_model_traits test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_models
  # /api/v1/models
  # Returns a list of available models supported by the Venice.ai API for both text and image inference.
  # @param [Hash] opts the optional parameters
  # @option opts [ListModelsTypeParameter] :type 
  # @return [ListModels200Response]
  describe 'list_models test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
